// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @default(uuid()) @id
  username String @unique
  password String 
  email String @unique
  submissions Submissions[]
  contests ContestParticipantLogs[]
}

model Problem {
  id String @default(uuid()) @id
  title String
  statement String @unique
  type String
  contest ContestQuestionLogs[]
  TestCases TestCases[]
  topic ProblemToTopic[]
  submissions Submissions[]
}

model TestCases {
  id String @default(uuid()) @id
  problemId String
  testCaseInput String
  testCaseOutput String
  explanation String 
  testCase Problem @relation(fields: [problemId], references: [id])
}

model Topic {
  id Int @default(autoincrement()) @id
  topicName String @unique
  problems ProblemToTopic[]
}

model ProblemToTopic{
  id Int @default(autoincrement()) @id
  problemId String
  topicId Int
  // problem Problem[]
  // topic Topic[]
  problemName Problem @relation(fields: [problemId],references: [id])
  topic Topic @relation(fields: [topicId],references: [id])
}

model Submissions{
  id String @default(cuid()) @id
  userId String
  problemId String
  status String
  type String @default("practice")
  contestId String @default("none")
  users User @relation(fields: [userId],references: [id])
  problems Problem @relation(fields: [problemId],references: [id])
}

//--------------------------------------------------------------------------------------//

model Contest{
  id String @default(cuid()) @id
  namen String @unique
  starts DateTime
  ends DateTime
  problems ContestQuestionLogs[]
  participant ContestParticipantLogs[]
}

model ContestQuestionLogs {
  id Int @default(autoincrement()) @id
  contestId String
  problemId String
  problem Problem @relation(fields: [problemId],references: [id])
  contest Contest @relation(fields: [contestId],references: [id])
}

model ContestParticipantLogs{
  
  contestId String
  userId String
  score Int @default(0)
  contest Contest @relation(fields: [contestId], references: [id])
  participant User @relation(fields: [userId], references: [id])
  @@id([contestId, userId])
}